name: cd

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  REGISTRY_URL: ghcr.io
  HELOT_GIT_NAME: helot
  HELOT_GIT_EMAIL: logisparte-helot@users.noreply.github.com
  HELOT_GITHUB_USERNAME: logisparte-helot
  HELOT_GITHUB_ACCESS_TOKEN: ${{ secrets.HELOT_GITHUB_ACCESS_TOKEN }}
  REPOSITORY: ${{ github.repository }}
  GITHUB_REF: ${{ github.ref }}
  COMMIT: ${{ github.sha }}
  DOCKER_BUILDKIT: true
  GIT_CEILING_DIRECTORIES: ${{ github.workspace }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install kano
        run: |
          curl -L https://github.com/logisparte/kano/releases/download/3.4.0/kano.tar.gz \
            | tar -xz
          sudo ./kano/install

      - name: Export environment variable
        run: |
          VERSION="$(echo "$GITHUB_REF" | cut -d "/" -f 3)"
          DEVELOPMENT_IMAGE="$REGISTRY_URL/$REPOSITORY-dev"
          DEVELOPMENT_IMAGE_COMMIT_TAG="$DEVELOPMENT_IMAGE:$COMMIT"
          DEVELOPMENT_IMAGE_VERSION_TAG="$DEVELOPMENT_IMAGE:$VERSION"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "DEVELOPMENT_IMAGE_COMMIT_TAG=$DEVELOPMENT_IMAGE_COMMIT_TAG" >> "$GITHUB_ENV"
          echo "DEVELOPMENT_IMAGE_VERSION_TAG=$DEVELOPMENT_IMAGE_VERSION_TAG" >> "$GITHUB_ENV"
          echo "KANO_DEVELOPMENT_IMAGE=$DEVELOPMENT_IMAGE_COMMIT_TAG" >> "$GITHUB_ENV"

      - name: Clone project
        uses: actions/checkout@v2

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.HELOT_GITHUB_USERNAME }}
          password: ${{ env.HELOT_GITHUB_ACCESS_TOKEN }}

      - name: Pull existing development image
        run: docker pull "$KANO_DEVELOPMENT_IMAGE"

      - name: Build project
        run: kano dockered build

      - name: Release project
        run: |
          kano dockered release \
            "$VERSION" \
            "$HELOT_GIT_NAME" \
            "$HELOT_GIT_EMAIL" \
            "$HELOT_GITHUB_ACCESS_TOKEN"

      - name: Tag development image with version
        run: docker tag "$DEVELOPMENT_IMAGE_COMMIT_TAG" "$DEVELOPMENT_IMAGE_VERSION_TAG"

      - name: Push versioned development image to registry
        run: docker push "$DEVELOPMENT_IMAGE_VERSION_TAG"

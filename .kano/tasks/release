#!/bin/sh

. "$SHELL_HELPERS/fail"
. "$SHELL_HELPERS/report"

release_help() {
  echo "Release the build to the package registry and update package index"
}

release() {
  if [ -z "$CI" ]; then
    fail "[release] Error: must be handled by the CI/CD pipeline"
  fi

  VERSION="$KANO_PROJECT_VERSION"
  _info "Releasing version: $VERSION"

  _info "Packaging artifact..."
  ARTIFACT_NAME="$KANO_PROJECT_NAME-$VERSION"
  ARTIFACT_FILE="$(_package_artifact "$ARTIFACT_NAME")"
  CHECKSUM="$(shasum -a 256 "$ARTIFACT_FILE" | cut -d " " -f 1)"
  _info "Packaged $ARTIFACT_FILE, checksum is: $CHECKSUM"

  _upload_artifact_to_aws "$ARTIFACT_FILE" "$CHECKSUM"
  _update_package_definition_in_index "$ARTIFACT_NAME" "$VERSION" "$CHECKSUM"
  report success "[release] Pull request for $ARTIFACT_NAME opened in package index"
}

_package_artifact() {
  ARTIFACT_NAME="$1"

  ARTIFACT_FILE="$ARTIFACT_NAME.tar.gz"
  mv "$BUILD_DIRECTORY" "$ARTIFACT_NAME"
  tar -czf "$ARTIFACT_FILE" "$ARTIFACT_NAME" > /dev/null 2>&1

  echo "$ARTIFACT_FILE"
}

_upload_artifact_to_aws() {
  ARTIFACT_FILE="$1"
  CHECKSUM="$2"

  _info "Uploading artifact to AWS..."
  aws s3 cp "$ARTIFACT_FILE" \
    "s3://$AWS_S3_BUCKET_PACKAGE_REPOSITORY/$KANO_PROJECT_NAME/$ARTIFACT_FILE" \
    --metadata checksum="$CHECKSUM"
  _info "Uploaded $ARTIFACT_FILE"
}

_update_package_definition_in_index() {
  ARTIFACT_NAME="$1"
  VERSION="$2"
  CHECKSUM="$3"

  _info "Updating package definition..."
  _login_to_github
  cd .. || fail
  gh repo clone logisparte/homebrew-packages
  cd homebrew-packages || fail
  git checkout -b "$ARTIFACT_NAME"
  _update_package_definition_file "$VERSION" "$CHECKSUM"
  git commit -a -m "chore($KANO_PROJECT_NAME): released $VERSION"
  git push origin "$ARTIFACT_NAME"
  gh pr create --fill --base master
}

_login_to_github() {
  git config --global url."https://$GIT_TOKEN:@github.com/".insteadOf "https://github.com/"
  git config --global user.email "$GIT_EMAIL"
  git config --global user.name "$GIT_NAME"
  echo "$GIT_TOKEN" | gh auth login --with-token
}

_update_package_definition_file() {
  VERSION="$1"
  CHECKSUM="$2"

  LANG=C sed \
    -e "s/\${VERSION}/$VERSION/g" \
    -e "s/\${CHECKSUM}/$CHECKSUM/g" \
    "../$KANO_PROJECT_NAME/formula.rb" > "$KANO_PROJECT_NAME.rb"
}

_info() {
  MESSAGE="$1"

  report info "[release] $MESSAGE"
}

#!/bin/sh
# Test the project to ensure the code behaves as intended

. "$SHELL_HELPERS/does_directory_exist"
. "$SHELL_HELPERS/does_symbol_exist"
. "$SHELL_HELPERS/fail"
. "$SHELL_HELPERS/report"

TEST_SUITE_DIRECTORY="$TEST_DIRECTORY/suites"

test() {
  SUITE_NAME="$1"

  if [ -n "$SUITE_NAME" ]; then
    SUITE_PATH="$TEST_SUITE_DIRECTORY/$SUITE_NAME"
    if does_directory_exist "$SUITE_PATH"; then
      _info "Running $SUITE_NAME tests"
      _test "$SUITE_PATH"
      return $?

    else
      fail "[test] No test suite named '$SUITE_NAME'"
    fi

  else
    SUITE_PATH="$TEST_SUITE_DIRECTORY"
    _info "Running all tests"
    _test "$SUITE_PATH"
    return $?
  fi
}

_test() {
  SUITE_PATH="$1"

  # Ensure that the kano code under test is the one in the source directory
  INITIAL_KANO_UNIVERSAL_DIRECTORY="$KANO_UNIVERSAL_DIRECTORY"
  INITIAL_KANO_LOCAL_DIRECTORY="$KANO_LOCAL_DIRECTORY"
  INITIAL_KANO_LOCAL_TASK_DIRECTORY="$KANO_LOCAL_TASK_DIRECTORY"
  INITIAL_KANO_LOCAL_ENVIRONMENT_FILE="$KANO_LOCAL_ENVIRONMENT_FILE"

  export KANO_UNIVERSAL_DIRECTORY="$SOURCE_DIRECTORY"
  export KANO_LOCAL_DIRECTORY="$TEST_DIRECTORY/data/some_project/.kano"
  export KANO_LOCAL_TASK_DIRECTORY="$KANO_LOCAL_DIRECTORY/tasks"
  export KANO_LOCAL_ENVIRONMENT_FILE="$KANO_LOCAL_DIRECTORY/environment"

  if does_symbol_exist "kcov"; then
    shellspec --default-path "$SUITE_PATH" --pattern "*.test" \
      --kcov --kcov-options "--include-pattern=/$SOURCE_DIRECTORY/"
      RESULT=$?

  else
    shellspec --default-path "$SUITE_PATH" --pattern "*.test"
    RESULT=$?
  fi

  # Reset environment
  export KANO_UNIVERSAL_DIRECTORY="$INITIAL_KANO_UNIVERSAL_DIRECTORY"
  export KANO_LOCAL_DIRECTORY="$INITIAL_KANO_LOCAL_DIRECTORY"
  export KANO_LOCAL_TASK_DIRECTORY="$INITIAL_KANO_LOCAL_TASK_DIRECTORY"
  export KANO_LOCAL_ENVIRONMENT_FILE="$INITIAL_KANO_LOCAL_ENVIRONMENT_FILE"

  return $RESULT
}

_info() {
  MESSAGE="$1"

  report info "[test] $MESSAGE"
}

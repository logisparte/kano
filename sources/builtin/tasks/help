#!/bin/sh

. "$SOURCE_DIRECTORY/builtin/helpers/colorize"
. "$SOURCE_DIRECTORY/builtin/helpers/does_directory_exist"
. "$SOURCE_DIRECTORY/builtin/helpers/does_symbol_exist"
. "$SOURCE_DIRECTORY/builtin/helpers/list_files_in_directory"
. "$SOURCE_DIRECTORY/builtin/helpers/report"

help_help() {
  echo "Show this help message"
}

help() {
  OUTPUT="$(_get_output)"
  _format_output "$OUTPUT"
}

_get_output() {
  PROJECT_TASK_DIRECTORY="$KANO_PROJECT_DIRECTORY/tasks"
  if does_directory_exist "$PROJECT_TASK_DIRECTORY"; then
    _get_output_for_scope "Project tasks" "green" "$PROJECT_TASK_DIRECTORY"
  fi

  USER_TASK_DIRECTORY="$KANO_USER_DIRECTORY/tasks"
  if does_directory_exist "$USER_TASK_DIRECTORY"; then
    _get_output_for_scope "User tasks" "purple" "$USER_TASK_DIRECTORY"
  fi

  SYSTEM_TASK_DIRECTORY="$KANO_SYSTEM_DIRECTORY/tasks"
  if does_directory_exist "$SYSTEM_TASK_DIRECTORY"; then
    _get_output_for_scope "System tasks" "blue" "$SYSTEM_TASK_DIRECTORY"
  fi

  BUILTIN_TASK_DIRECTORY="$KANO_BUILTIN_DIRECTORY/tasks"
  _get_output_for_scope "Builtin tasks" "cyan" "$BUILTIN_TASK_DIRECTORY"
}

_get_output_for_scope() {
  SCOPE_TITLE="$1"
  SCOPE_COLOR="$2"
  SCOPE_TASK_DIRECTORY="$3"

  report message "|"
  report message "$(colorize "$SCOPE_TITLE" "$SCOPE_COLOR")|"
  report message "|"
  for TASK in $(list_files_in_directory "$SCOPE_TASK_DIRECTORY"); do
    _import "$SCOPE_TASK_DIRECTORY/$TASK"

    TASK_HELP_FUNCTION="${TASK}_help"
    if does_symbol_exist "$TASK_HELP_FUNCTION"; then
      TASK_HELP="$("$TASK_HELP_FUNCTION")"

    else
      TASK_HELP="-"
    fi

    report message "$(colorize "$TASK" "$SCOPE_COLOR")|$TASK_HELP"
  done
}

_format_output() {
  OUTPUT="$1"

  echo "$OUTPUT" | awk -F "|" '{printf "%-32s %s\n", $1, $2}'
}

_import() {
  . "$1"
}

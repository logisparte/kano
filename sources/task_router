#!/bin/sh

. "$KANO_SOURCE_DIRECTORY/builtin/helpers/does_file_exist"
. "$KANO_SOURCE_DIRECTORY/builtin/helpers/fail"
. "$KANO_SOURCE_DIRECTORY/task_executor"
. "$KANO_SOURCE_DIRECTORY/scope_mapper"

task_router() {
  route_task() {
    case "$1" in
      -*)
        _route_with_flag "$@"
        ;;

      "")
        _route_without_flag help
        ;;

      *)
        _route_without_flag "$@"
        ;;
    esac
  }

  _route_with_flag() {
    FLAG="$1"
    TASK="$2"

    if [ -z "$TASK" ]; then
      fail "Must provide a task name when overriding with a flag"

    else
      shift 2
    fi

    SCOPE="$(scope_mapper map_name_from_flag "$FLAG")"
    SCOPE_DIRECTORY="$(scope_mapper map_directory_from_name "$SCOPE")"
    if does_file_exist "$SCOPE_DIRECTORY/tasks/$TASK"; then
      task_executor execute_task "$SCOPE_DIRECTORY" "$TASK" "$@"

    else
      fail "No task named '$TASK' in scope: $SCOPE"
    fi
  }

  _route_without_flag() {
    TASK="$1"
    shift

    SEARCHED_SCOPES=""
    for SCOPE in $(scope_walker walk_up); do
      SCOPE_DIRECTORY="$(scope_mapper map_directory_from_name "$SCOPE")"
      if does_file_exist "$SCOPE_DIRECTORY/tasks/$TASK"; then
        task_executor execute_task "$SCOPE_DIRECTORY" "$TASK" "$@"
        return $?

      else
        if [ -z "$SEARCHED_SCOPES" ]; then
          SEARCHED_SCOPES="$SCOPE"

        else
          SEARCHED_SCOPES="$SEARCHED_SCOPES, $SCOPE"
        fi
      fi
    done

    fail "No task named '$TASK' in scopes: $SEARCHED_SCOPES"
  }

  "$@"
}

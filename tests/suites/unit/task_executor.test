#!/bin/sh

Include "$KANO_SOURCE_DIRECTORY/task_executor"

SOME_SCOPE_1="some_scope_1"
SOME_SCOPE_2="some_scope_2"
SOME_SCOPE_DIRECTORY_1="${SOME_SCOPE_1}_directory"
SOME_SCOPE_DIRECTORY_2="${SOME_SCOPE_2}_directory"
SOME_ENVIRONMENT_FILE_1="$SOME_SCOPE_DIRECTORY_1/environment"
SOME_ENVIRONMENT_FILE_2="$SOME_SCOPE_DIRECTORY_2/environment"
SOME_TASK="some_task"
SOME_TASK_FILE="$SOME_SCOPE_DIRECTORY_1/tasks/$SOME_TASK"
SOME_PARAMETER="some_parameter"

Describe "task_executor"
  fail() {
    # shellcheck disable=SC2034
    fail_called_with="$*"
    %preserve fail_called_with
    exit 1
  }

  scope_walker() {
    walk_down() {
      true
    }

    "$@"
  }

  scope_mapper() {
    map_directory_from_name() {
      if [ "$1" = "$SOME_SCOPE_1" ]; then
        echo "$SOME_SCOPE_DIRECTORY_1"

      elif [ "$1" = "$SOME_SCOPE_2" ]; then
        echo "$SOME_SCOPE_DIRECTORY_2"

      else
        exit 1
      fi
    }

    "$@"
  }

  does_file_exist() {
    if [ "$1" = "$SOME_ENVIRONMENT_FILE_1" ]; then
      "$DOES_ENVIRONMENT_FILE_EXISTS_1"

    elif [ "$1" = "$SOME_ENVIRONMENT_FILE_2" ]; then
      "$DOES_ENVIRONMENT_FILE_EXISTS_2"

    else
      false
    fi
  }

  _import() {
    if [ -n "$import_called_with" ]; then
      import_called_with="$import_called_with|$*"

    else
      import_called_with="$*"
    fi

    %preserve import_called_with
  }

  DOES_ENVIRONMENT_FILE_EXISTS_1=false
  DOES_ENVIRONMENT_FILE_EXISTS_2=false

  Describe "execute_task"
    Context "when task is not correctly defined"
      It "should fail with the expected error message"
        When run task_executor execute_task \
          "$SOME_SCOPE_DIRECTORY_1" "$SOME_TASK" "$SOME_PARAMETER"
        The status should be failure
        The variable fail_called_with should equal \
          "Task '$SOME_TASK' was not properly defined in '$SOME_TASK_FILE'"
      End
    End

    Context "when task is correctly defined"
      eval "$SOME_TASK() {
        task_called_with=\"\$*\"
        %preserve task_called_with
      }"

      It "should execute task"
        When run task_executor execute_task \
          "$SOME_SCOPE_DIRECTORY_1" "$SOME_TASK" "$SOME_PARAMETER"
        The status should be success
        The variable import_called_with should include "$SOME_TASK_FILE"
        The variable task_called_with should equal "$SOME_PARAMETER"
      End

      Context "when some scopes exist"
        scope_walker() {
          walk_down() {
            echo "$SOME_SCOPE_1"
            echo "$SOME_SCOPE_2"
          }

          "$@"
        }

        Context "when no environment files exist for current scope and up"
          It "should not import any environment files"
            When run task_executor execute_task \
              "$SOME_SCOPE_DIRECTORY_1" "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable import_called_with should not include "$SOME_ENVIRONMENT_FILE_1"
            The variable import_called_with should not include "$SOME_ENVIRONMENT_FILE_2"
          End
        End

        Context "when only one environment files exist for current scope and up"
          DOES_ENVIRONMENT_FILE_EXISTS_1=true
          It "should only import its environment files"
            When run task_executor execute_task \
              "$SOME_SCOPE_DIRECTORY_1" "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable import_called_with should include "$SOME_ENVIRONMENT_FILE_1"
            The variable import_called_with should not include "$SOME_ENVIRONMENT_FILE_2"
          End
        End

        Context "when all scopes have environment files"
          DOES_ENVIRONMENT_FILE_EXISTS_1=true
          DOES_ENVIRONMENT_FILE_EXISTS_2=true
          It "should import all environment files"
            When run task_executor execute_task \
              "$SOME_SCOPE_DIRECTORY_1" "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable import_called_with should include "$SOME_ENVIRONMENT_FILE_1"
            The variable import_called_with should include "$SOME_ENVIRONMENT_FILE_2"
          End
        End
      End
    End
  End
End

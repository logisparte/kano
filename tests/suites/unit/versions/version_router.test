#!/bin/sh

Include "$SOURCE_DIRECTORY/versions/version_router"

SOME_V1_VERSION="1.1.2"
SOME_UNKNOWN_VERSION="9.9.9"
SOME_UNKNOWN_MAJOR_VERSION="9"
SOME_TASK="some_task"

Describe "version_router"
  fail() {
    # shellcheck disable=SC2034
    fail_called_with="$*"
    %preserve fail_called_with
    exit 1
  }

  version_finder() {
    find() {
      echo "$FOUND_VERSION"
    }

    "$@"
  }

  controller() {
    # shellcheck disable=SC2034
    controller_called_with="$*"
    %preserve controller_called_with
  }

  _import() {
    if [ -n "$import_called_with" ]; then
      import_called_with="$import_called_with|$*"

    else
      import_called_with="$*"
    fi

    %preserve import_called_with
  }

  FOUND_VERSION=""

  Describe "route"
    Context "when major version is v1"
      FOUND_VERSION="$SOME_V1_VERSION"
      It "should route to the v1 controller"
        When run version_router route "$SOME_TASK"
        The status should be success
        The variable import_called_with should eq "$SOURCE_DIRECTORY/versions/v1/controller"
        The variable controller_called_with should eq "execute $SOME_TASK"
      End
    End

    Context "when version is unknown"
      FOUND_VERSION="$SOME_UNKNOWN_VERSION"
      It "should fail with the expected error message"
        When run version_router route "$SOME_TASK"
        The status should be failure
        The variable fail_called_with should eq "Kano has no version 'v$SOME_UNKNOWN_MAJOR_VERSION'"
      End
    End
  End
End

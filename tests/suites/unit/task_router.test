#!/bin/sh

Include "$SOURCE_DIRECTORY/task_router"

SOME_TASK="some_task"
SOME_PARAMETER="some_parameter"
SOME_PROJECT_TASK_FILE="$KANO_PROJECT_DIRECTORY/tasks/$SOME_TASK"
SOME_USER_TASK_FILE="$KANO_USER_DIRECTORY/tasks/$SOME_TASK"
SOME_SYSTEM_TASK_FILE="$KANO_SYSTEM_DIRECTORY/tasks/$SOME_TASK"
SOME_BUILTIN_TASK_FILE="$KANO_BUILTIN_DIRECTORY/tasks/$SOME_TASK"
HELP_TASK_FILE="$KANO_BUILTIN_DIRECTORY/tasks/help"

Describe "task_router"
  fail() {
    # shellcheck disable=SC2034
    fail_called_with="$*"
    %preserve fail_called_with
    exit 1
  }

  does_file_exist() {
    if [ "$1" = "$SOME_PROJECT_TASK_FILE" ]; then
      "$DOES_PROJECT_TASK_FILE_EXIST"

    elif [ "$1" = "$SOME_USER_TASK_FILE" ]; then
      "$DOES_USER_TASK_FILE_EXIST"

    elif [ "$1" = "$SOME_SYSTEM_TASK_FILE" ]; then
      "$DOES_SYSTEM_TASK_FILE_EXIST"

    elif [ "$1" = "$SOME_BUILTIN_TASK_FILE" ]; then
      "$DOES_BUILTIN_TASK_FILE_EXIST"

    elif [ "$1" = "$HELP_TASK_FILE" ]; then
      true

    else
      false
    fi
  }

  task_executor() {
    execute_task() {
      # shellcheck disable=SC2034
      execute_task_called_with="$*"
      %preserve execute_task_called_with
    }

    "$@"
  }

  DOES_PROJECT_TASK_FILE_EXIST=false
  DOES_USER_TASK_FILE_EXIST=false
  DOES_SYSTEM_TASK_FILE_EXIST=false
  DOES_BUILTIN_TASK_FILE_EXIST=false

  Describe "route_task"
    Context "when passing an invalid flag"
      SOME_INVALID_FLAG="-x"
      It "should fail with the expected error message"
        When run task_router route_task "$SOME_INVALID_FLAG" "$SOME_TASK"
        The status should be failure
        The variable fail_called_with should equal "Invalid flag '$SOME_INVALID_FLAG'"
      End
    End

    Context "when task does not exist"
      It "should fail with the expected error message"
        When run task_router route_task "$SOME_TASK"
        The status should be failure
        The variable fail_called_with should equal \
          "No project, user, system or builtin task named '$SOME_TASK'"
      End

      Context "when overriding with -b flag"
        It "should fail with the expected error message"
          When run task_router route_task -b "$SOME_TASK"
          The status should be failure
          The variable fail_called_with should equal "No builtin task named '$SOME_TASK'"
        End
      End

      Context "when overriding with --builtin flag"
        It "should fail with the expected error message"
          When run task_router route_task --builtin "$SOME_TASK"
          The status should be failure
          The variable fail_called_with should equal "No builtin task named '$SOME_TASK'"
        End
      End

      Context "when overriding with -u flag"
        It "should fail with the expected error message"
          When run task_router route_task -u "$SOME_TASK"
          The status should be failure
          The variable fail_called_with should equal "No user task named '$SOME_TASK'"
        End
      End

      Context "when overriding with --user flag"
        It "should fail with the expected error message"
          When run task_router route_task --user "$SOME_TASK"
          The status should be failure
          The variable fail_called_with should equal "No user task named '$SOME_TASK'"
        End
      End

      Context "when overriding with -s flag"
        It "should fail with the expected error message"
          When run task_router route_task -s "$SOME_TASK"
          The status should be failure
          The variable fail_called_with should equal "No system task named '$SOME_TASK'"
        End
      End

      Context "when overriding with --system flag"
        It "should fail with the expected error message"
          When run task_router route_task --system "$SOME_TASK"
          The status should be failure
          The variable fail_called_with should equal "No system task named '$SOME_TASK'"
        End
      End
    End

    Context "when task exists in builtin scope"
      DOES_BUILTIN_TASK_FILE_EXIST=true
      It "should delegate to task executor with builtin directory"
        When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
        The status should be success
        The variable execute_task_called_with should equal \
          "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
      End
    End

    Context "when task exists in system scope"
      DOES_SYSTEM_TASK_FILE_EXIST=true
      It "should delegate to task executor with system directory"
        When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
        The status should be success
        The variable execute_task_called_with should equal \
          "$KANO_SYSTEM_DIRECTORY $SOME_TASK $SOME_PARAMETER"
      End

      Context "when task also exists in builtin scope"
        DOES_BUILTIN_TASK_FILE_EXIST=true
        Context "when not overriding with flag"
          It "should delegate to task executor with system directory"
            When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_SYSTEM_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with -b flag"
          It "should delegate to task executor with builtin directory"
            When run task_router route_task -b "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with --builtin flag"
          It "should delegate to task executor with builtin directory"
            When run task_router route_task --builtin "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End
      End
    End

    Context "when task exists in user scope"
      DOES_USER_TASK_FILE_EXIST=true
      It "should delegate to task executor with user directory"
        When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
        The status should be success
        The variable execute_task_called_with should equal \
          "$KANO_USER_DIRECTORY $SOME_TASK $SOME_PARAMETER"
      End

      Context "when task also exists in system scope"
        DOES_SYSTEM_TASK_FILE_EXIST=true
        Context "when not overriding with flag"
          It "should delegate to task executor with user directory"
            When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_USER_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with -s flag"
          It "should delegate to task executor with system directory"
            When run task_router route_task -s "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_SYSTEM_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with --system flag"
          It "should delegate to task executor with system directory"
            When run task_router route_task --system "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_SYSTEM_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End
      End

      Context "when task also exists in builtin scope"
        DOES_BUILTIN_TASK_FILE_EXIST=true
        Context "when not overriding with flag"
          It "should delegate to task executor with user directory"
            When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_USER_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with -b flag"
          It "should delegate to task executor with builtin directory"
            When run task_router route_task -b "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with --builtin flag"
          It "should delegate to task executor with builtin directory"
            When run task_router route_task --builtin "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End
      End
    End

    Context "when task exists in project scope"
      DOES_PROJECT_TASK_FILE_EXIST=true
      It "should delegate to task executor with project directory"
        When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
        The status should be success
        The variable execute_task_called_with should equal \
          "$KANO_PROJECT_DIRECTORY $SOME_TASK $SOME_PARAMETER"
      End

      Context "when task also exists in user scope"
        DOES_USER_TASK_FILE_EXIST=true
        Context "when not overriding with flag"
          It "should delegate to task executor with project directory"
            When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_PROJECT_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with -u flag"
          It "should delegate to task executor with user directory"
            When run task_router route_task -u "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_USER_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with --user flag"
          It "should delegate to task executor with user directory"
            When run task_router route_task --user "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_USER_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End
      End

      Context "when task also exists in system scope"
        DOES_SYSTEM_TASK_FILE_EXIST=true
        Context "when not overriding with flag"
          It "should delegate to task executor with project directory"
            When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_PROJECT_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with -s flag"
          It "should delegate to task executor with system directory"
            When run task_router route_task -s "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_SYSTEM_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with --system flag"
          It "should delegate to task executor with system directory"
            When run task_router route_task --system "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_SYSTEM_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End
      End

      Context "when task also exists in builtin scope"
        DOES_BUILTIN_TASK_FILE_EXIST=true
        Context "when not overriding with flag"
          It "should delegate to task executor with project directory"
            When run task_router route_task "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_PROJECT_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with -b flag"
          It "should delegate to task executor with builtin directory"
            When run task_router route_task -b "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End

        Context "when overriding with --builtin flag"
          It "should delegate to task executor with builtin directory"
            When run task_router route_task -b "$SOME_TASK" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$KANO_BUILTIN_DIRECTORY $SOME_TASK $SOME_PARAMETER"
          End
        End
      End
    End

    Context "when task is empty"
      Context "when not overriding with flag"
        It "should delegate to task executor help task"
          When run task_router route_task
          The status should be success
          The variable execute_task_called_with should equal "$KANO_BUILTIN_DIRECTORY help"
        End
      End

      Context "when overriding with a flag"
        It "should fail with the expected error message"
          When run task_router route_task -b
          The status should be failure
          The variable fail_called_with should equal \
            "Must provide a task name when overriding with a flag"
        End
      End
    End
  End
End

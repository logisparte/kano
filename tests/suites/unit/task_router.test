#!/bin/sh

Include "$KANO_SOURCE_DIRECTORY/task_router"

SOME_FLAG="-x"
SOME_SCOPE_1="some_scope_1"
SOME_SCOPE_2="some_scope_2"
SOME_SCOPE_DIRECTORY_1="some_scope_directory_1"
SOME_SCOPE_DIRECTORY_2="some_scope_directory_2"
SOME_TASK_1="some_task_1"
SOME_TASK_2="some_task_2"

SOME_PARAMETER="some_parameter"

Describe "task_router"
  fail() {
    # shellcheck disable=SC2034
    fail_called_with="$*"
    %preserve fail_called_with
    exit 1
  }

  does_file_exist() {
    if [ "$1" = "$SOME_SCOPE_DIRECTORY_1/tasks/$SOME_TASK_1" ]; then
      "$DOES_TASK_FILE_1_EXISTS"

    elif [ "$1" = "$SOME_SCOPE_DIRECTORY_2/tasks/$SOME_TASK_2" ]; then
      "$DOES_TASK_FILE_2_EXISTS"

    elif [ "$1" = "$SOME_SCOPE_DIRECTORY_1/tasks/help" ]; then
      true

    else
      false
    fi
  }

  scope_mapper() {
    map_name_from_flag() {
      if [ "$1" = "$SOME_FLAG" ]; then
        echo "$SOME_SCOPE_1"

      else
        exit 1
      fi
    }

    map_directory_from_name() {
      if [ "$1" = "$SOME_SCOPE_1" ]; then
        echo "$SOME_SCOPE_DIRECTORY_1"

      elif [ "$1" = "$SOME_SCOPE_2" ]; then
        echo "$SOME_SCOPE_DIRECTORY_2"

      else
        exit 1
      fi
    }

    "$@"
  }

  scope_walker() {
    walk_up() {
      echo "$SOME_SCOPE_1"
    }

    "$@"
  }

  task_executor() {
    execute_task() {
      # shellcheck disable=SC2034
      execute_task_called_with="$*"
      %preserve execute_task_called_with
    }

    "$@"
  }

  DOES_TASK_FILE_1_EXISTS=false
  DOES_TASK_FILE_2_EXISTS=false

  Describe "route_task"
    Context "when a flag is provided"
      Context "when no task is provided"
        It "should fail with the expected error message"
          When run task_router route_task "$SOME_FLAG"
          The status should be failure
          The variable fail_called_with should equal \
            "Must provide a task name when overriding with a flag"
        End
      End

      Context "when a task is provided"
        Context "when task does not exist"
          It "should fail with the expected error message"
            When run task_router route_task "$SOME_FLAG" "$SOME_TASK_1" "$SOME_PARAMETER"
            The status should be failure
            The variable fail_called_with should equal \
              "No task named '$SOME_TASK_1' in scope: $SOME_SCOPE_1"
          End
        End

        Context "when task exists"
          DOES_TASK_FILE_1_EXISTS=true
          It "should execute task"
            When run task_router route_task "$SOME_FLAG" "$SOME_TASK_1" "$SOME_PARAMETER"
            The status should be success
            The variable execute_task_called_with should equal \
              "$SOME_SCOPE_DIRECTORY_1 $SOME_TASK_1 $SOME_PARAMETER"
          End
        End
      End
    End

    Context "when no flag provided"
      Context "when no task provided"
        It "should execute help task"
          When run task_router route_task
          The status should be success
          The variable execute_task_called_with should equal \
            "$SOME_SCOPE_DIRECTORY_1 help"
        End
      End

      Context "when a task is provided"
        Context "when there's only one scope"
          Context "when it does not exist in scope"
            It "should fail with the expected error message"
              When run task_router route_task "$SOME_TASK_1" "$SOME_PARAMETER"
              The status should be failure
              The variable fail_called_with should equal \
                "No task named '$SOME_TASK_1' in scopes: $SOME_SCOPE_1"
            End
          End

          Context "when task exists in scope"
            DOES_TASK_FILE_1_EXISTS=true
            It "should execute provided task"
              When run task_router route_task "$SOME_TASK_1" "$SOME_PARAMETER"
              The status should be success
              The variable execute_task_called_with should equal \
                "$SOME_SCOPE_DIRECTORY_1 $SOME_TASK_1 $SOME_PARAMETER"
            End
          End
        End

        Context "when there's multiple scopes"
          scope_walker() {
            walk_up() {
              echo "$SOME_SCOPE_1"
              echo "$SOME_SCOPE_2"
            }

            "$@"
          }

          Context "when it does not exist in any scope"
            It "should fail with the expected error message"
              When run task_router route_task "$SOME_TASK_2" "$SOME_PARAMETER"
              The status should be failure
              The variable fail_called_with should equal \
                "No task named '$SOME_TASK_2' in scopes: $SOME_SCOPE_1, $SOME_SCOPE_2"
            End
          End

          Context "when task exists in a scope"
            DOES_TASK_FILE_2_EXISTS=true
            It "should execute provided task"
              When run task_router route_task "$SOME_TASK_2" "$SOME_PARAMETER"
              The status should be success
              The variable execute_task_called_with should equal \
                "$SOME_SCOPE_DIRECTORY_2 $SOME_TASK_2 $SOME_PARAMETER"
            End
          End
        End
      End
    End
  End
End

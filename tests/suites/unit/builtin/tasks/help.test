#!/bin/sh

Include "$KANO_SOURCE_DIRECTORY/builtin/tasks/help"

SOME_SCOPE_1="some_scope_1"
SOME_SCOPE_2="some_scope_2"
SOME_DIRECTORY_1="some_directory_1"
SOME_DIRECTORY_2="some_directory_2"
SOME_TASK_1="some_task_1"
SOME_TASK_2="some_task_2"
SOME_TASK_HELP_MESSAGE_1="some_task_help_message_1"
SOME_TEAM="some_team"

Describe "help"
  report() {
    if [ -n "$report_called_with" ]; then
      report_called_with="$report_called_with|$*"

    else
      report_called_with="$*"
    fi

    %preserve report_called_with
  }

  _list_all_existing_in_order() {
    echo "$SOME_SCOPE_1"
  }

  scopes() {
    list_all_existing_in_order() {
      _list_all_existing_in_order
    }

    to_directory() {
      if [ "$1" = "$SOME_SCOPE_1" ]; then
        echo "$SOME_DIRECTORY_1"

      elif [ "$1" = "$SOME_SCOPE_2" ]; then
        echo "$SOME_DIRECTORY_2"

      else
        exit 1
      fi
    }

    "$@"
  }

  list_files_in_directory() {
    if [ "$1" = "$SOME_DIRECTORY_1/tasks" ]; then
      echo "$SOME_TASK_1"

    elif [ "$1" = "$SOME_DIRECTORY_2/tasks" ]; then
      echo "$SOME_TASK_2"
    fi
  }

  awk() {
    true
  }

  _import() {
    true
  }

  It "has its own help message"
    When run help_help
    The status should be success
    The output should equal "Show this help message"
  End

  Context "when tasks are defined in only one scope"
    It "should print that scope's section"
      When run help
      The status should be success
      The variable report_called_with should include "# $SOME_SCOPE_1 tasks"
    End

    Context "when a scope task has no help message"
      It "should display '-' as help message instead"
        When run help
        The status should be success
        The variable report_called_with should include "$SOME_TASK_1"
        The variable report_called_with should include "-"
      End
    End

    Context "when scope task has a help message"
      eval "${SOME_TASK_1}_help() {
        echo \"$SOME_TASK_HELP_MESSAGE_1\"
      }"

      It "should display the help message"
        When run help
        The status should be success
        The variable report_called_with should include "$SOME_TASK_1"
        The variable report_called_with should include "$SOME_TASK_HELP_MESSAGE_1"
      End
    End
  End

  Context "when tasks are defined in multiple scopes"
    _list_all_existing_in_order() {
      echo "$SOME_SCOPE_1"
      echo "$SOME_SCOPE_2"
    }

    It "should print all scope sections"
      When run help
      The status should be success
      The variable report_called_with should include "# $SOME_SCOPE_1 tasks"
      The variable report_called_with should include "# $SOME_SCOPE_2 tasks"
    End
  End

  Context "when scope is project"
    _list_all_existing_in_order() {
      echo "project"
    }

    It "should print scope section in green"
      When run help
      The status should be success
      The variable report_called_with should include "$(colorize "$TASK" green)"
    End
  End

  Context "when scope is user"
    _list_all_existing_in_order() {
      echo "user"
    }

    It "should print scope section in purple"
      When run help
      The status should be success
      The variable report_called_with should include "$(colorize "$TASK" purple)"
    End
  End

  Context "when scope is team"
    _list_all_existing_in_order() {
      echo "team"
    }

    export KANO_TEAM="$SOME_TEAM"
    It "should print a personalized scope section title"
      When run help
      The status should be success
      The variable report_called_with should include "# team ($SOME_TEAM) tasks"
    End

    It "should print scope section in blue"
      When run help
      The status should be success
      The variable report_called_with should include "$(colorize "$TASK" blue)"
    End
  End

  Context "when scope is system"
    _list_all_existing_in_order() {
      echo "system"
    }

    It "should print scope section in gray"
      When run help
      The status should be success
      The variable report_called_with should include "$(colorize "$TASK" gray)"
    End
  End

  Context "when scope is builtin"
    _list_all_existing_in_order() {
      echo "builtin"
    }

    It "should print scope section in cyan"
      When run help
      The status should be success
      The variable report_called_with should include "$(colorize "$TASK" cyan)"
    End
  End
End
